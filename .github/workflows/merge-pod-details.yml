name: Capture Pod Details and Store in Log History on Merge (Public)

on:
  push:
    branches:
      - dev
    # Trigger when code is merged into dev branch

jobs:
  capture-pod-details:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up kubectl with Kubernetes configuration stored in GitHub Secrets
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}  # Kubernetes config securely stored in GitHub Secrets

      # Step 3: Capture Kubernetes pod details and store them as a file
      - name: Get Pod details
        run: |
          kubectl get pods -o json > pod_details.json
          export UNIQUE_ID=$(date +%Y%m%d%H%M%S)-${GITHUB_SHA}
          mv pod_details.json "loghistory/pod_details_${UNIQUE_ID}.json"
          
      # Step 4: Commit the changes back to GitHub
      - name: Commit Pod Details to GitHub
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add loghistory/
          git commit -m "Add Pod details for ${UNIQUE_ID} to loghistory"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided in GitHub Actions
